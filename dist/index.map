{"version":3,"sources":["helper/cmd.js","branch/module.js","branch/commands.js","index.js"],"names":["checkUndefined","value","writeError","message","console","log","chalk","red","createBranch","checkoutBranch","name","reference","initBranchCommands","program","command","option","alias","description","action","subcommand","parameter","cmd","use","parse","process","argv"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AACA;;;;AAIO,MAAMA,0CAAkBC,KAAD,IAAW;AACvC,SAAO,OAAOA,KAAP,KAAiB,WAAxB;AACD,CAFM;;AAIA,MAAMC,kCAAcC,OAAD,IAAa;AACrCC,UAAQC,GAAR,CAAa,GAAEC,gBAAMC,GAAN,CAAU,SAAV,CAAqB,IAAGJ,OAAQ,EAA/C;AACD,CAFM;;;;;;;QCHeK,eAAAA;QAWAC,iBAAAA;;AAjBtB;;AAEA;;;;AAIO,eAAeD,YAAf,CAA4BE,IAA5B,EAAkC;AACvC;AACA,MAAG,yBAAeA,IAAf,CAAH,EAAwB;AACtB,yBAAY,2CAAZ;AACD;AACF;;AAED;;;;AAIO,eAAeD,cAAf,CAA8BE,SAA9B,EAAyC;AAC/C;AACAP,UAAQC,GAAR,CAAY,UAAZ;AACA;;;;;;;;;ACpBD;;;;AAEA;;;;AAEO,MAAMO,kDAAqB,MAAM;;AAEtC;AACAC,sBACCC,OADD,CACS,iCADT;AAEA;AAFA,GAGCC,MAHD,CAGQ,WAHR,EAGqB,8FAHrB,EAICC,KAJD,CAIO,GAJP,EAKCC,WALD,CAKa,wCALb,EAMCC,MAND,CAMQ,OAAOC,UAAP,EAAmBC,SAAnB,EAA8BC,GAA9B,KAAsC;AAC5C,YAAOF,UAAP;AACE,WAAK,KAAL;AACE;AACA,cAAMR,YAAY,MAAM,0BAAaS,SAAb,CAAxB;AACA,YAAIC,IAAIC,GAAR,EAAa;AACX,gBAAM,4BAAeX,SAAf,CAAN;AACD;AANL;AAQD,GAfD;;AAkBAE,sBAAQU,KAAR,CAAcC,QAAQC,IAAtB;AACD,CAtBM;;;;ACHP;;AAEA,qCAHA","file":"index.map","sourceRoot":"../src","sourcesContent":["import chalk from 'chalk';\n/**\n * Checks whether a value is undefined\n * @param {*} value \n */\nexport const checkUndefined = (value) => {\n  return typeof value === 'undefined';\n}\n\nexport const writeError = (message) => {\n  console.log(`${chalk.red('[Error]')} ${message}`)\n}","import { checkUndefined, writeError } from '../helper/cmd';\n\n/**\n * Create a Branch\n * @param {string} name name of the branch\n */\nexport async function createBranch(name) {\n  // http://www.nodegit.org/api/branch/#create\n  if(checkUndefined(name)){\n    writeError(`The branches's name must not be undefined`)\n  }\n}\n\n/**\n * Checkout a branch\n * @param {*} reference Branch reference\n */\nexport async function checkoutBranch(reference) {\n // https://github.com/nodegit/nodegit/blob/master/examples/checkout-remote-branch.js\n console.log('checkout');\n}","import program from 'commander';\n\nimport { createBranch, checkoutBranch } from './module';\n\nexport const initBranchCommands = () => {\n\n  // register the hit branch command\n  program\n  .command('branch [subcommand] [parameter]')\n  // --u option is only available with hit branch <branch_name> -u command \n  .option('-u, --use', 'Create and use a branch with one command (only available with commands that create a branch)')\n  .alias('b')\n  .description('Create, use, modify and merge branches')\n  .action(async (subcommand, parameter, cmd) => {\n    switch(subcommand) {\n      case 'add':\n        // create a branch\n        const reference = await createBranch(parameter)\n        if (cmd.use) {\n          await checkoutBranch(reference);\n        }\n    }\n  });\n\n\n  program.parse(process.argv);\n}\n","#!/usr/bin/env node\nimport { initBranchCommands } from './branch/commands';\n\ninitBranchCommands();"]}